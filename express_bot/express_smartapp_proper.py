#!/usr/bin/env python3
"""
Express SmartApp - –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Express
–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ —Ä–µ–π—Å—ã –¥–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ Express
"""

import os
import json
import logging
import requests
from datetime import datetime
from flask import Flask, request, jsonify, render_template_string
from flask_cors import CORS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)
CORS(app)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Express SmartApp —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
EXPRESS_SMARTAPP_CONFIG = {
    'app_name': 'Flight Booking SmartApp',
    'app_version': '1.0.0',
    'app_description': '–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ—á–Ω—ã–µ —Ä–µ–π—Å—ã',
    'app_icon': '‚úàÔ∏è',
    'app_color': '#0088cc',
    'api_base_url': os.environ.get('FLASK_API_URL', 'http://localhost:5002'),
    'express_server_url': os.environ.get('EXPRESS_SERVER_URL', 'http://localhost:8080')
}

class ExpressSmartApp:
    """Express SmartApp —Å–æ–≥–ª–∞—Å–Ω–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
    
    def __init__(self):
        self.app_name = EXPRESS_SMARTAPP_CONFIG['app_name']
        self.version = EXPRESS_SMARTAPP_CONFIG['app_version']
        self.api_url = EXPRESS_SMARTAPP_CONFIG['api_base_url']
        self.express_url = EXPRESS_SMARTAPP_CONFIG['express_server_url']
        
    def get_manifest(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç SmartApp –¥–ª—è Express"""
        return {
            "name": self.app_name,
            "version": self.version,
            "description": EXPRESS_SMARTAPP_CONFIG['app_description'],
            "icon": EXPRESS_SMARTAPP_CONFIG['app_icon'],
            "color": EXPRESS_SMARTAPP_CONFIG['app_color'],
            "author": "Express SmartApp Team",
            "permissions": [
                "read_user_info",
                "send_messages", 
                "access_files",
                "manage_applications"
            ],
            "capabilities": [
                "flight_booking",
                "application_management",
                "notifications",
                "statistics"
            ],
            "endpoints": {
                "main": "/smartapp",
                "api": "/api/smartapp",
                "webhook": "/webhook/smartapp"
            },
            "ui": {
                "type": "web",
                "responsive": True,
                "theme": "express"
            }
        }
    
    def get_main_interface(self):
        """–ì–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å SmartApp –¥–ª—è Express"""
        return {
            "title": f"{EXPRESS_SMARTAPP_CONFIG['app_icon']} {self.app_name}",
            "subtitle": "–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ—á–Ω—ã–µ —Ä–µ–π—Å—ã",
            "sections": [
                {
                    "id": "quick_actions",
                    "title": "–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",
                    "type": "grid",
                    "items": [
                        {
                            "id": "new_application",
                            "title": "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É",
                            "icon": "üìù",
                            "action": "open_form",
                            "color": "#2196f3"
                        },
                        {
                            "id": "my_applications", 
                            "title": "–ú–æ–∏ –∑–∞—è–≤–∫–∏",
                            "icon": "üìã",
                            "action": "open_list",
                            "color": "#4caf50"
                        },
                        {
                            "id": "periods",
                            "title": "–ü–µ—Ä–∏–æ–¥—ã",
                            "icon": "üìÖ", 
                            "action": "open_periods",
                            "color": "#ff9800"
                        },
                        {
                            "id": "statistics",
                            "title": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                            "icon": "üìä",
                            "action": "open_stats",
                            "color": "#9c27b0"
                        }
                    ]
                }
            ]
        }
    
    def get_application_form_config(self):
        """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏"""
        return {
            "title": "–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–π—Å",
            "description": "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ—á–Ω—ã–π —Ä–µ–π—Å",
            "fields": [
                {
                    "id": "location",
                    "type": "select",
                    "label": "–õ–æ–∫–∞—Ü–∏—è",
                    "required": True,
                    "placeholder": "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é",
                    "options": [
                        {"value": "–ú–æ—Å–∫–≤–∞", "label": "–ú–æ—Å–∫–≤–∞"},
                        {"value": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "label": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"},
                        {"value": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "label": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"},
                        {"value": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "label": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"},
                        {"value": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫", "label": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫"},
                        {"value": "–°–æ—á–∏", "label": "–°–æ—á–∏"}
                    ]
                },
                {
                    "id": "oke",
                    "type": "select",
                    "label": "–û–ö–≠",
                    "required": True,
                    "placeholder": "–í—ã–±–µ—Ä–∏—Ç–µ –û–ö–≠",
                    "options": [
                        {"value": "–û–ö–≠ 1", "label": "–û–ö–≠ 1"},
                        {"value": "–û–ö–≠ 2", "label": "–û–ö–≠ 2"},
                        {"value": "–û–ö–≠ 3", "label": "–û–ö–≠ 3"},
                        {"value": "–û–ö–≠ 4", "label": "–û–ö–≠ 4"},
                        {"value": "–û–ö–≠ 5", "label": "–û–ö–≠ 5"},
                        {"value": "–û–ö–≠ –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫", "label": "–û–ö–≠ –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫"},
                        {"value": "–û–ö–≠ –°–æ—á–∏", "label": "–û–ö–≠ –°–æ—á–∏"},
                        {"value": "–û–õ–°–∏–¢", "label": "–û–õ–°–∏–¢"}
                    ]
                },
                {
                    "id": "date",
                    "type": "date",
                    "label": "–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞",
                    "required": True,
                    "min_date": datetime.now().strftime("%Y-%m-%d")
                },
                {
                    "id": "position",
                    "type": "select",
                    "label": "–î–æ–ª–∂–Ω–æ—Å—Ç—å",
                    "required": True,
                    "placeholder": "–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
                    "options": [
                        {"value": "–ë–ü", "label": "–ë–ü"},
                        {"value": "–†–ü", "label": "–†–ü"},
                        {"value": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "label": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"},
                        {"value": "–≠–∫—Å–ø–µ—Ä—Ç", "label": "–≠–∫—Å–ø–µ—Ä—Ç"},
                        {"value": "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å", "label": "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å"}
                    ]
                },
                {
                    "id": "fio",
                    "type": "text",
                    "label": "–§–ò–û",
                    "required": True,
                    "placeholder": "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                },
                {
                    "id": "tab_num",
                    "type": "text",
                    "label": "–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä",
                    "required": True,
                    "placeholder": "123456"
                },
                {
                    "id": "direction",
                    "type": "select",
                    "label": "–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                    "required": True,
                    "placeholder": "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                    "options": [
                        {"value": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "label": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"},
                        {"value": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "label": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"},
                        {"value": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "label": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"},
                        {"value": "–ö–∞–∑–∞–Ω—å", "label": "–ö–∞–∑–∞–Ω—å"},
                        {"value": "–°–æ—á–∏", "label": "–°–æ—á–∏"}
                    ]
                },
                {
                    "id": "wishes",
                    "type": "textarea",
                    "label": "–ü–æ–∂–µ–ª–∞–Ω–∏—è –∫ —Ä–µ–π—Å—É",
                    "required": False,
                    "placeholder": "–£–∫–∞–∂–∏—Ç–µ –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è..."
                }
            ],
            "submit_button": {
                "text": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É",
                "color": "#2196f3"
            }
        }
    
    def process_application(self, form_data, user_context):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ Express API"""
        try:
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
            application_data = {
                "user_id": user_context.get('user_id', 'express_user'),
                "user_name": user_context.get('user_name', 'Express User'),
                "location": form_data.get('location'),
                "oke": form_data.get('oke'),
                "date": form_data.get('date'),
                "position": form_data.get('position'),
                "fio": form_data.get('fio'),
                "tab_num": form_data.get('tab_num'),
                "direction": form_data.get('direction'),
                "wishes": form_data.get('wishes', ''),
                "platform": "express_smartapp",
                "submitted_at": datetime.now().isoformat(),
                "express_context": user_context
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
            response = requests.post(
                f"{self.api_url}/api/application",
                json=application_data,
                timeout=10
            )
            
            if response.status_code == 200:
                result = response.json()
                return {
                    "success": True,
                    "message": "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                    "application_id": result.get('application_id'),
                    "data": result
                }
            else:
                return {
                    "success": False,
                    "message": f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏: {response.status_code}",
                    "error": response.text
                }
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
            return {
                "success": False,
                "message": "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º",
                "error": str(e)
            }
    
    def get_user_applications(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            response = requests.get(
                f"{self.api_url}/api/applications/user/{user_id}",
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                return {
                    "success": True,
                    "applications": data.get('applications', []),
                    "total": data.get('total', 0)
                }
            else:
                return {
                    "success": False,
                    "applications": [],
                    "error": f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫: {response.status_code}"
                }
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫: {e}")
            return {
                "success": False,
                "applications": [],
                "error": "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º"
            }
    
    def get_application_periods(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫"""
        try:
            response = requests.get(
                f"{self.api_url}/api/public/application-periods",
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                return {
                    "success": True,
                    "periods": data.get('periods', []),
                    "total": data.get('total', 0)
                }
            else:
                return {
                    "success": False,
                    "periods": [],
                    "error": f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–æ–≤: {response.status_code}"
                }
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–æ–≤: {e}")
            return {
                "success": False,
                "periods": [],
                "error": "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º"
            }
    
    def get_statistics(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∑–∞—è–≤–∫–∞–º"""
        try:
            response = requests.get(
                f"{self.api_url}/api/statistics",
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                return {
                    "success": True,
                    "statistics": data.get('statistics', {}),
                    "data": data
                }
            else:
                return {
                    "success": False,
                    "statistics": {},
                    "error": f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code}"
                }
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            return {
                "success": False,
                "statistics": {},
                "error": "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º"
            }

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä SmartApp
smartapp = ExpressSmartApp()

# Express SmartApp API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
@app.route('/manifest', methods=['GET'])
def get_manifest():
    """–ú–∞–Ω–∏—Ñ–µ—Å—Ç SmartApp –¥–ª—è Express"""
    return jsonify(smartapp.get_manifest())

@app.route('/interface', methods=['GET'])
def get_main_interface():
    """–ì–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å SmartApp"""
    return jsonify(smartapp.get_main_interface())

@app.route('/form', methods=['GET'])
def get_application_form():
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏"""
    return jsonify(smartapp.get_application_form_config())

@app.route('/submit', methods=['POST'])
def submit_application():
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏"""
    try:
        data = request.get_json()
        form_data = data.get('form_data', {})
        user_context = data.get('user_context', {})
        
        result = smartapp.process_application(form_data, user_context)
        return jsonify(result)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
        return jsonify({
            "success": False,
            "message": "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏",
            "error": str(e)
        }), 500

@app.route('/applications/<user_id>', methods=['GET'])
def get_user_applications(user_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    result = smartapp.get_user_applications(user_id)
    return jsonify(result)

@app.route('/periods', methods=['GET'])
def get_application_periods():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫"""
    result = smartapp.get_application_periods()
    return jsonify(result)

@app.route('/statistics', methods=['GET'])
def get_statistics():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    result = smartapp.get_statistics()
    return jsonify(result)

# Webhook –¥–ª—è Express
@app.route('/webhook', methods=['POST'])
def express_webhook():
    """Webhook –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –æ—Ç Express"""
    try:
        data = request.get_json()
        event_type = data.get('type')
        user_id = data.get('user_id')
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ—Ç Express: {event_type} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π
        if event_type == 'user_joined':
            return jsonify({"status": "ok", "message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω"})
        elif event_type == 'user_left':
            return jsonify({"status": "ok", "message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω"})
        elif event_type == 'message_received':
            return jsonify({"status": "ok", "message": "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ"})
        else:
            return jsonify({"status": "ok", "message": "–°–æ–±—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"})
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return jsonify({"status": "error", "message": str(e)}), 500

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π webhook endpoint –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–º
@app.route('/webhook/smartapp', methods=['POST'])
def express_webhook_smartapp():
    """Webhook –¥–ª—è SmartApp (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–º)"""
    return express_webhook()

# HTML –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è Express SmartApp
@app.route('/', methods=['GET'])
def smartapp_interface():
    """HTML –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å SmartApp –¥–ª—è Express"""
    html_template = """
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Express SmartApp - –ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–π—Å—ã</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                padding: 20px;
            }
            
            .container {
                max-width: 1200px;
                margin: 0 auto;
                background: white;
                border-radius: 20px;
                box-shadow: 0 20px 40px rgba(0,0,0,0.1);
                overflow: hidden;
            }
            
            .header {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                padding: 40px;
                text-align: center;
            }
            
            .header h1 {
                font-size: 32px;
                font-weight: 700;
                margin-bottom: 10px;
            }
            
            .header p {
                font-size: 18px;
                opacity: 0.9;
            }
            
            .content {
                padding: 40px;
            }
            
            .menu-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
                gap: 24px;
                margin-bottom: 40px;
            }
            
            .menu-item {
                background: #f8f9fa;
                border: 2px solid #e9ecef;
                border-radius: 16px;
                padding: 24px;
                text-align: center;
                cursor: pointer;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
            }
            
            .menu-item::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
                transition: left 0.5s;
            }
            
            .menu-item:hover::before {
                left: 100%;
            }
            
            .menu-item:hover {
                background: #e3f2fd;
                border-color: #2196f3;
                transform: translateY(-4px);
                box-shadow: 0 8px 25px rgba(33, 150, 243, 0.15);
            }
            
            .menu-item h3 {
                font-size: 20px;
                color: #333;
                margin-bottom: 12px;
                font-weight: 600;
            }
            
            .menu-item p {
                color: #666;
                font-size: 14px;
                line-height: 1.5;
            }
            
            .form-container {
                display: none;
                background: #f8f9fa;
                border-radius: 16px;
                padding: 32px;
                margin-top: 24px;
            }
            
            .form-container h3 {
                color: #333;
                margin-bottom: 24px;
                font-size: 24px;
            }
            
            .form-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 20px;
            }
            
            .form-group {
                margin-bottom: 20px;
            }
            
            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-weight: 600;
                color: #333;
                font-size: 14px;
            }
            
            .form-group input,
            .form-group select,
            .form-group textarea {
                width: 100%;
                padding: 14px 16px;
                border: 2px solid #e9ecef;
                border-radius: 10px;
                font-size: 16px;
                transition: all 0.3s ease;
                background: white;
            }
            
            .form-group input:focus,
            .form-group select:focus,
            .form-group textarea:focus {
                outline: none;
                border-color: #2196f3;
                box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.1);
            }
            
            .btn {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border: none;
                padding: 16px 32px;
                border-radius: 10px;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
            }
            
            .result {
                margin-top: 24px;
                padding: 20px;
                border-radius: 10px;
                display: none;
                font-weight: 500;
            }
            
            .success {
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }
            
            .error {
                background: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }
            
            .loading {
                display: none;
                text-align: center;
                padding: 20px;
            }
            
            .spinner {
                border: 4px solid #f3f3f3;
                border-top: 4px solid #2196f3;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                animation: spin 1s linear infinite;
                margin: 0 auto 10px;
            }
            
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>‚úàÔ∏è Express SmartApp</h1>
                <p>–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ—á–Ω—ã–µ —Ä–µ–π—Å—ã</p>
            </div>
            <div class="content">
                <div class="menu-grid">
                    <div class="menu-item" onclick="showForm()">
                        <h3>üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</h3>
                        <p>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–π—Å</p>
                    </div>
                    <div class="menu-item" onclick="showApplications()">
                        <h3>üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏</h3>
                        <p>–ü—Ä–æ—Å–º–æ—Ç—Ä –º–æ–∏—Ö –∑–∞—è–≤–æ–∫</p>
                    </div>
                    <div class="menu-item" onclick="showPeriods()">
                        <h3>üìÖ –ü–µ—Ä–∏–æ–¥—ã –ø–æ–¥–∞—á–∏</h3>
                        <p>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫</p>
                    </div>
                    <div class="menu-item" onclick="showStatistics()">
                        <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                        <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞—è–≤–∫–∞–º</p>
                    </div>
                </div>
                
                <div id="formContainer" class="form-container">
                    <h3>–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–π—Å</h3>
                    <form id="applicationForm">
                        <div class="form-grid">
                            <div class="form-group">
                                <label for="location">–õ–æ–∫–∞—Ü–∏—è:</label>
                                <select id="location" required>
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é</option>
                                    <option value="–ú–æ—Å–∫–≤–∞">–ú–æ—Å–∫–≤–∞</option>
                                    <option value="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</option>
                                    <option value="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫">–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫</option>
                                    <option value="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</option>
                                    <option value="–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫">–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫</option>
                                    <option value="–°–æ—á–∏">–°–æ—á–∏</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="oke">–û–ö–≠:</label>
                                <select id="oke" required>
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –û–ö–≠</option>
                                    <option value="–û–ö–≠ 1">–û–ö–≠ 1</option>
                                    <option value="–û–ö–≠ 2">–û–ö–≠ 2</option>
                                    <option value="–û–ö–≠ 3">–û–ö–≠ 3</option>
                                    <option value="–û–ö–≠ 4">–û–ö–≠ 4</option>
                                    <option value="–û–ö–≠ 5">–û–ö–≠ 5</option>
                                    <option value="–û–ö–≠ –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫">–û–ö–≠ –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫</option>
                                    <option value="–û–ö–≠ –°–æ—á–∏">–û–ö–≠ –°–æ—á–∏</option>
                                    <option value="–û–õ–°–∏–¢">–û–õ–°–∏–¢</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="date">–î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞:</label>
                                <input type="date" id="date" required>
                            </div>
                            <div class="form-group">
                                <label for="position">–î–æ–ª–∂–Ω–æ—Å—Ç—å:</label>
                                <select id="position" required>
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å</option>
                                    <option value="–ë–ü">–ë–ü</option>
                                    <option value="–†–ü">–†–ü</option>
                                    <option value="–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç">–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç</option>
                                    <option value="–≠–∫—Å–ø–µ—Ä—Ç">–≠–∫—Å–ø–µ—Ä—Ç</option>
                                    <option value="–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å">–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="fio">–§–ò–û:</label>
                                <input type="text" id="fio" placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á" required>
                            </div>
                            <div class="form-group">
                                <label for="tab_num">–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä:</label>
                                <input type="text" id="tab_num" placeholder="123456" required>
                            </div>
                            <div class="form-group">
                                <label for="direction">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</label>
                                <select id="direction" required>
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</option>
                                    <option value="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</option>
                                    <option value="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫">–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫</option>
                                    <option value="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</option>
                                    <option value="–ö–∞–∑–∞–Ω—å">–ö–∞–∑–∞–Ω—å</option>
                                    <option value="–°–æ—á–∏">–°–æ—á–∏</option>
                                </select>
                            </div>
                            <div class="form-group" style="grid-column: 1 / -1;">
                                <label for="wishes">–ü–æ–∂–µ–ª–∞–Ω–∏—è –∫ —Ä–µ–π—Å—É:</label>
                                <textarea id="wishes" placeholder="–£–∫–∞–∂–∏—Ç–µ –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è..." rows="3"></textarea>
                            </div>
                        </div>
                        <button type="submit" class="btn">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
                    </form>
                    <div id="loading" class="loading">
                        <div class="spinner"></div>
                        <p>–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏...</p>
                    </div>
                    <div id="result" class="result"></div>
                </div>
            </div>
        </div>

        <script>
            function showForm() {
                document.getElementById('formContainer').style.display = 'block';
            }
            
            function showApplications() {
                alert('–§—É–Ω–∫—Ü–∏—è "–ú–æ–∏ –∑–∞—è–≤–∫–∏" –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
            }
            
            function showPeriods() {
                alert('–§—É–Ω–∫—Ü–∏—è "–ü–µ—Ä–∏–æ–¥—ã –ø–æ–¥–∞—á–∏" –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
            }
            
            function showStatistics() {
                alert('–§—É–Ω–∫—Ü–∏—è "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
            }
            
            document.getElementById('applicationForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = {
                    location: document.getElementById('location').value,
                    oke: document.getElementById('oke').value,
                    date: document.getElementById('date').value,
                    position: document.getElementById('position').value,
                    fio: document.getElementById('fio').value,
                    tab_num: document.getElementById('tab_num').value,
                    direction: document.getElementById('direction').value,
                    wishes: document.getElementById('wishes').value
                };
                
                const userContext = {
                    user_id: 'express_user_' + Date.now(),
                    user_name: 'Express User',
                    platform: 'express_smartapp'
                };
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
                document.getElementById('loading').style.display = 'block';
                document.getElementById('result').style.display = 'none';
                
                try {
                    const response = await fetch('/submit', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            form_data: formData,
                            user_context: userContext
                        })
                    });
                    
                    const result = await response.json();
                    const resultDiv = document.getElementById('result');
                    
                    // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
                    document.getElementById('loading').style.display = 'none';
                    
                    if (result.success) {
                        resultDiv.className = 'result success';
                        resultDiv.innerHTML = `
                            <strong>‚úÖ ${result.message}</strong><br>
                            <small>ID –∑–∞—è–≤–∫–∏: ${result.application_id || 'N/A'}</small>
                        `;
                        resultDiv.style.display = 'block';
                        document.getElementById('applicationForm').reset();
                    } else {
                        resultDiv.className = 'result error';
                        resultDiv.innerHTML = `
                            <strong>‚ùå ${result.message}</strong><br>
                            <small>${result.error || ''}</small>
                        `;
                        resultDiv.style.display = 'block';
                    }
                } catch (error) {
                    document.getElementById('loading').style.display = 'none';
                    const resultDiv = document.getElementById('result');
                    resultDiv.className = 'result error';
                    resultDiv.innerHTML = `
                        <strong>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏</strong><br>
                        <small>${error.message}</small>
                    `;
                    resultDiv.style.display = 'block';
                }
            });
            
            // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').min = today;
        </script>
    </body>
    </html>
    """
    return html_template

@app.route('/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è SmartApp"""
    return jsonify({
        "status": "ok",
        "app_name": EXPRESS_SMARTAPP_CONFIG['app_name'],
        "version": EXPRESS_SMARTAPP_CONFIG['app_version'],
        "timestamp": datetime.now().isoformat(),
        "express_integration": True
    })

if __name__ == '__main__':
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ Express SmartApp: {EXPRESS_SMARTAPP_CONFIG['app_name']} v{EXPRESS_SMARTAPP_CONFIG['app_version']}")
    logger.info(f"üì± SmartApp –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5005/")
    logger.info(f"üîó API URL: {EXPRESS_SMARTAPP_CONFIG['api_base_url']}")
    logger.info(f"üìã –ú–∞–Ω–∏—Ñ–µ—Å—Ç: http://localhost:5005/manifest")
    
    app.run(host='0.0.0.0', port=5005, debug=True)






